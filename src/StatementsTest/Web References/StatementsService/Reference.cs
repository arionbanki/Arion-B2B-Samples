//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace IsIT.B2B.StatementsTest.StatementsService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IcelandicOnlineBankingStatementsSoap", Namespace="http://IcelandicOnlineBanking/2005/12/01/Statements")]
    public partial class IcelandicOnlineBankingStatementsService : Microsoft.Web.Services3.WebServicesClientProtocol
    {
        
        private System.Threading.SendOrPostCallback GetAccountStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyRatesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IcelandicOnlineBankingStatementsService() {
            this.Url = global::IsIT.B2B.StatementsTest.Properties.Settings.Default.IsIT_B2B_StatementsTest_StatementsService_IcelandicOnlineBankingStatementsService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAccountStatementCompletedEventHandler GetAccountStatementCompleted;
        
        /// <remarks/>
        public event GetCurrencyRatesCompletedEventHandler GetCurrencyRatesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://IcelandicOnlineBanking/2005/12/01/GetAccountStatement", RequestNamespace="http://IcelandicOnlineBanking/2005/12/01/Statements", ResponseNamespace="http://IcelandicOnlineBanking/2005/12/01/Statements", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("accountStatementResponse")]
        public AccountStatementResponse GetAccountStatement(AccountStatement accountStatement) {
            object[] results = this.Invoke("GetAccountStatement", new object[] {
                        accountStatement});
            return ((AccountStatementResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountStatementAsync(AccountStatement accountStatement) {
            this.GetAccountStatementAsync(accountStatement, null);
        }
        
        /// <remarks/>
        public void GetAccountStatementAsync(AccountStatement accountStatement, object userState) {
            if ((this.GetAccountStatementOperationCompleted == null)) {
                this.GetAccountStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountStatementOperationCompleted);
            }
            this.InvokeAsync("GetAccountStatement", new object[] {
                        accountStatement}, this.GetAccountStatementOperationCompleted, userState);
        }
        
        private void OnGetAccountStatementOperationCompleted(object arg) {
            if ((this.GetAccountStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountStatementCompleted(this, new GetAccountStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://IcelandicOnlineBanking/2005/12/01/GetCurrencyRates", RequestElementName="CurrencyRateRequest", RequestNamespace="http://IcelandicOnlineBanking/2005/12/01/Statements", ResponseElementName="CurrencyRateResponse", ResponseNamespace="http://IcelandicOnlineBanking/2005/12/01/Statements", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("currencyRates")]
        public CurrencyRate[] GetCurrencyRates(CurrencyType currencyType, System.DateTime date) {
            object[] results = this.Invoke("GetCurrencyRates", new object[] {
                        currencyType,
                        date});
            return ((CurrencyRate[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyRatesAsync(CurrencyType currencyType, System.DateTime date) {
            this.GetCurrencyRatesAsync(currencyType, date, null);
        }
        
        /// <remarks/>
        public void GetCurrencyRatesAsync(CurrencyType currencyType, System.DateTime date, object userState) {
            if ((this.GetCurrencyRatesOperationCompleted == null)) {
                this.GetCurrencyRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyRatesOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyRates", new object[] {
                        currencyType,
                        date}, this.GetCurrencyRatesOperationCompleted, userState);
        }
        
        private void OnGetCurrencyRatesOperationCompleted(object arg) {
            if ((this.GetCurrencyRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyRatesCompleted(this, new GetCurrencyRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IcelandicOnlineBanking/2005/12/01/StatementTypes")]
    public partial class AccountStatement {
        
        private string accountField;
        
        private System.DateTime dateFromField;
        
        private System.DateTime dateToField;
        
        private long recordFromField;
        
        private bool recordFromFieldSpecified;
        
        private long recordToField;
        
        private bool recordToFieldSpecified;
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime DateFrom {
            get {
                return this.dateFromField;
            }
            set {
                this.dateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime DateTo {
            get {
                return this.dateToField;
            }
            set {
                this.dateToField = value;
            }
        }
        
        /// <remarks/>
        public long RecordFrom {
            get {
                return this.recordFromField;
            }
            set {
                this.recordFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecordFromSpecified {
            get {
                return this.recordFromFieldSpecified;
            }
            set {
                this.recordFromFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long RecordTo {
            get {
                return this.recordToField;
            }
            set {
                this.recordToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecordToSpecified {
            get {
                return this.recordToFieldSpecified;
            }
            set {
                this.recordToFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IcelandicOnlineBanking/2005/12/01/CommonTypes")]
    public partial class CurrencyRate {
        
        private string currencyCodeField;
        
        private decimal sellingRateField;
        
        private bool sellingRateFieldSpecified;
        
        private decimal buyingRateField;
        
        private bool buyingRateFieldSpecified;
        
        private decimal customsRateField;
        
        private bool customsRateFieldSpecified;
        
        private System.DateTime timeStampField;
        
        /// <remarks/>
        public string CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal SellingRate {
            get {
                return this.sellingRateField;
            }
            set {
                this.sellingRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SellingRateSpecified {
            get {
                return this.sellingRateFieldSpecified;
            }
            set {
                this.sellingRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal BuyingRate {
            get {
                return this.buyingRateField;
            }
            set {
                this.buyingRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuyingRateSpecified {
            get {
                return this.buyingRateFieldSpecified;
            }
            set {
                this.buyingRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal CustomsRate {
            get {
                return this.customsRateField;
            }
            set {
                this.customsRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomsRateSpecified {
            get {
                return this.customsRateFieldSpecified;
            }
            set {
                this.customsRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IcelandicOnlineBanking/2005/12/01/StatementTypes")]
    public partial class AccountTransaction {
        
        private string transactionIDField;
        
        private System.DateTime transactionDateField;
        
        private System.DateTime valueDateField;
        
        private bool valueDateFieldSpecified;
        
        private string batchNumberField;
        
        private string redeemingBankField;
        
        private string transactionField;
        
        private string referenceField;
        
        private string billNumberField;
        
        private string categoryCodeField;
        
        private string categoryField;
        
        private string referenceDetailField;
        
        private string payorIDField;
        
        private decimal amountField;
        
        private decimal balanceField;
        
        private bool balanceFieldSpecified;
        
        /// <remarks/>
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime TransactionDate {
            get {
                return this.transactionDateField;
            }
            set {
                this.transactionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime ValueDate {
            get {
                return this.valueDateField;
            }
            set {
                this.valueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueDateSpecified {
            get {
                return this.valueDateFieldSpecified;
            }
            set {
                this.valueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string BatchNumber {
            get {
                return this.batchNumberField;
            }
            set {
                this.batchNumberField = value;
            }
        }
        
        /// <remarks/>
        public string RedeemingBank {
            get {
                return this.redeemingBankField;
            }
            set {
                this.redeemingBankField = value;
            }
        }
        
        /// <remarks/>
        public string Transaction {
            get {
                return this.transactionField;
            }
            set {
                this.transactionField = value;
            }
        }
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        public string BillNumber {
            get {
                return this.billNumberField;
            }
            set {
                this.billNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryCode {
            get {
                return this.categoryCodeField;
            }
            set {
                this.categoryCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceDetail {
            get {
                return this.referenceDetailField;
            }
            set {
                this.referenceDetailField = value;
            }
        }
        
        /// <remarks/>
        public string PayorID {
            get {
                return this.payorIDField;
            }
            set {
                this.payorIDField = value;
            }
        }
        
        /// <remarks/>
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public decimal Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalanceSpecified {
            get {
                return this.balanceFieldSpecified;
            }
            set {
                this.balanceFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IcelandicOnlineBanking/2005/12/01/StatementTypes")]
    public partial class AccountStatementResponse {
        
        private string accountField;
        
        private string currencyField;
        
        private decimal overdraftField;
        
        private decimal balanceField;
        
        private decimal availableAmountField;
        
        private Status statusField;
        
        private decimal totalAmountWaitingField;
        
        private string iBANField;
        
        private string accountOwnerIDField;
        
        private string customAccountNameField;
        
        private string accountInformationField;
        
        private AccountTransaction[] transactionsField;
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public decimal Overdraft {
            get {
                return this.overdraftField;
            }
            set {
                this.overdraftField = value;
            }
        }
        
        /// <remarks/>
        public decimal Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        public decimal AvailableAmount {
            get {
                return this.availableAmountField;
            }
            set {
                this.availableAmountField = value;
            }
        }
        
        /// <remarks/>
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public decimal TotalAmountWaiting {
            get {
                return this.totalAmountWaitingField;
            }
            set {
                this.totalAmountWaitingField = value;
            }
        }
        
        /// <remarks/>
        public string IBAN {
            get {
                return this.iBANField;
            }
            set {
                this.iBANField = value;
            }
        }
        
        /// <remarks/>
        public string AccountOwnerID {
            get {
                return this.accountOwnerIDField;
            }
            set {
                this.accountOwnerIDField = value;
            }
        }
        
        /// <remarks/>
        public string CustomAccountName {
            get {
                return this.customAccountNameField;
            }
            set {
                this.customAccountNameField = value;
            }
        }
        
        /// <remarks/>
        public string AccountInformation {
            get {
                return this.accountInformationField;
            }
            set {
                this.accountInformationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Transaction", IsNullable=false)]
        public AccountTransaction[] Transactions {
            get {
                return this.transactionsField;
            }
            set {
                this.transactionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IcelandicOnlineBanking/2005/12/01/CommonTypes")]
    public enum Status {
        
        /// <remarks/>
        Open,
        
        /// <remarks/>
        Closed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://IcelandicOnlineBanking/2005/12/01/CommonTypes")]
    public enum CurrencyType {
        
        /// <remarks/>
        NoteRate,
        
        /// <remarks/>
        ExchangeRate,
        
        /// <remarks/>
        CustomsRate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetAccountStatementCompletedEventHandler(object sender, GetAccountStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccountStatementResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccountStatementResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetCurrencyRatesCompletedEventHandler(object sender, GetCurrencyRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyRate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyRate[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591