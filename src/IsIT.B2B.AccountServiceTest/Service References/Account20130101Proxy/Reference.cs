//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IsIT.B2B.AccountServiceTest.Account20130101Proxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.b2b.is/Accounts/2013/01/01/AccountTypes")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LedgerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerPersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IsIT.B2B.AccountServiceTest.Account20130101Proxy.AccountDetails DetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bank {
            get {
                return this.BankField;
            }
            set {
                if ((object.ReferenceEquals(this.BankField, value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ledger {
            get {
                return this.LedgerField;
            }
            set {
                if ((object.ReferenceEquals(this.LedgerField, value) != true)) {
                    this.LedgerField = value;
                    this.RaisePropertyChanged("Ledger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountTypeField, value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string OwnerPersonId {
            get {
                return this.OwnerPersonIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerPersonIdField, value) != true)) {
                    this.OwnerPersonIdField = value;
                    this.RaisePropertyChanged("OwnerPersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool IsFit {
            get {
                return this.IsFitField;
            }
            set {
                if ((this.IsFitField.Equals(value) != true)) {
                    this.IsFitField = value;
                    this.RaisePropertyChanged("IsFit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((object.ReferenceEquals(this.BalanceField, value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.AccountDetails Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Amount", Namespace="http://schemas.b2b.is/Accounts/2013/01/01/AccountTypes")]
    [System.SerializableAttribute()]
    public partial class Amount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDetails", Namespace="http://schemas.b2b.is/Accounts/2013/01/01/AccountTypes")]
    [System.SerializableAttribute()]
    public partial class AccountDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IsIT.B2B.AccountServiceTest.Account20130101Proxy.Address OwnerAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SwiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IbanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount AvailableAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount EstimatedInterestAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount AnnualTurnoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount LastYearTurnoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastTransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InterestGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount OverdraftAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OverdraftInterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OverdraftValidFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OverdraftValidToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuyingRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorizedSignerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IsIT.B2B.AccountServiceTest.Account20130101Proxy.FitInfo FitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.Address OwnerAddress {
            get {
                return this.OwnerAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerAddressField, value) != true)) {
                    this.OwnerAddressField = value;
                    this.RaisePropertyChanged("OwnerAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Swift {
            get {
                return this.SwiftField;
            }
            set {
                if ((object.ReferenceEquals(this.SwiftField, value) != true)) {
                    this.SwiftField = value;
                    this.RaisePropertyChanged("Swift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Iban {
            get {
                return this.IbanField;
            }
            set {
                if ((object.ReferenceEquals(this.IbanField, value) != true)) {
                    this.IbanField = value;
                    this.RaisePropertyChanged("Iban");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount AvailableAmount {
            get {
                return this.AvailableAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableAmountField, value) != true)) {
                    this.AvailableAmountField = value;
                    this.RaisePropertyChanged("AvailableAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public decimal InterestRate {
            get {
                return this.InterestRateField;
            }
            set {
                if ((this.InterestRateField.Equals(value) != true)) {
                    this.InterestRateField = value;
                    this.RaisePropertyChanged("InterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount EstimatedInterestAmount {
            get {
                return this.EstimatedInterestAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.EstimatedInterestAmountField, value) != true)) {
                    this.EstimatedInterestAmountField = value;
                    this.RaisePropertyChanged("EstimatedInterestAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount AnnualTurnover {
            get {
                return this.AnnualTurnoverField;
            }
            set {
                if ((object.ReferenceEquals(this.AnnualTurnoverField, value) != true)) {
                    this.AnnualTurnoverField = value;
                    this.RaisePropertyChanged("AnnualTurnover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount LastYearTurnover {
            get {
                return this.LastYearTurnoverField;
            }
            set {
                if ((object.ReferenceEquals(this.LastYearTurnoverField, value) != true)) {
                    this.LastYearTurnoverField = value;
                    this.RaisePropertyChanged("LastYearTurnover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.DateTime LastTransactionDate {
            get {
                return this.LastTransactionDateField;
            }
            set {
                if ((this.LastTransactionDateField.Equals(value) != true)) {
                    this.LastTransactionDateField = value;
                    this.RaisePropertyChanged("LastTransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string InterestGroup {
            get {
                return this.InterestGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.InterestGroupField, value) != true)) {
                    this.InterestGroupField = value;
                    this.RaisePropertyChanged("InterestGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount OverdraftAmount {
            get {
                return this.OverdraftAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.OverdraftAmountField, value) != true)) {
                    this.OverdraftAmountField = value;
                    this.RaisePropertyChanged("OverdraftAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public decimal OverdraftInterestRate {
            get {
                return this.OverdraftInterestRateField;
            }
            set {
                if ((this.OverdraftInterestRateField.Equals(value) != true)) {
                    this.OverdraftInterestRateField = value;
                    this.RaisePropertyChanged("OverdraftInterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public System.DateTime OverdraftValidFrom {
            get {
                return this.OverdraftValidFromField;
            }
            set {
                if ((this.OverdraftValidFromField.Equals(value) != true)) {
                    this.OverdraftValidFromField = value;
                    this.RaisePropertyChanged("OverdraftValidFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public System.DateTime OverdraftValidTo {
            get {
                return this.OverdraftValidToField;
            }
            set {
                if ((this.OverdraftValidToField.Equals(value) != true)) {
                    this.OverdraftValidToField = value;
                    this.RaisePropertyChanged("OverdraftValidTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public decimal BuyingRate {
            get {
                return this.BuyingRateField;
            }
            set {
                if ((this.BuyingRateField.Equals(value) != true)) {
                    this.BuyingRateField = value;
                    this.RaisePropertyChanged("BuyingRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public decimal SellingRate {
            get {
                return this.SellingRateField;
            }
            set {
                if ((this.SellingRateField.Equals(value) != true)) {
                    this.SellingRateField = value;
                    this.RaisePropertyChanged("SellingRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public int TransactionCount {
            get {
                return this.TransactionCountField;
            }
            set {
                if ((this.TransactionCountField.Equals(value) != true)) {
                    this.TransactionCountField = value;
                    this.RaisePropertyChanged("TransactionCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string AuthorizedSigner {
            get {
                return this.AuthorizedSignerField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizedSignerField, value) != true)) {
                    this.AuthorizedSignerField = value;
                    this.RaisePropertyChanged("AuthorizedSigner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.FitInfo Fit {
            get {
                return this.FitField;
            }
            set {
                if ((object.ReferenceEquals(this.FitField, value) != true)) {
                    this.FitField = value;
                    this.RaisePropertyChanged("Fit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.b2b.is/Accounts/2013/01/01/AccountTypes")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeAndTownField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Town {
            get {
                return this.TownField;
            }
            set {
                if ((object.ReferenceEquals(this.TownField, value) != true)) {
                    this.TownField = value;
                    this.RaisePropertyChanged("Town");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string PostalCodeAndTown {
            get {
                return this.PostalCodeAndTownField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeAndTownField, value) != true)) {
                    this.PostalCodeAndTownField = value;
                    this.RaisePropertyChanged("PostalCodeAndTown");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FitInfo", Namespace="http://schemas.b2b.is/Accounts/2013/01/01/AccountTypes")]
    [System.SerializableAttribute()]
    public partial class FitInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount TotalInterestsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount TotalCostField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalAmountField, value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount TotalInterests {
            get {
                return this.TotalInterestsField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalInterestsField, value) != true)) {
                    this.TotalInterestsField = value;
                    this.RaisePropertyChanged("TotalInterests");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.Amount TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalCostField, value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankErrorFault", Namespace="http://schemas.b2b.is/Accounts/2013/01/01/Faults")]
    [System.SerializableAttribute()]
    public partial class BankErrorFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BanksErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BanksErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralSourceTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneralSourceCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralErrorCode {
            get {
                return this.GeneralErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralErrorCodeField, value) != true)) {
                    this.GeneralErrorCodeField = value;
                    this.RaisePropertyChanged("GeneralErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeneralErrorText {
            get {
                return this.GeneralErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralErrorTextField, value) != true)) {
                    this.GeneralErrorTextField = value;
                    this.RaisePropertyChanged("GeneralErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string BanksErrorCode {
            get {
                return this.BanksErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BanksErrorCodeField, value) != true)) {
                    this.BanksErrorCodeField = value;
                    this.RaisePropertyChanged("BanksErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string BanksErrorText {
            get {
                return this.BanksErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.BanksErrorTextField, value) != true)) {
                    this.BanksErrorTextField = value;
                    this.RaisePropertyChanged("BanksErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string GeneralSourceText {
            get {
                return this.GeneralSourceTextField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralSourceTextField, value) != true)) {
                    this.GeneralSourceTextField = value;
                    this.RaisePropertyChanged("GeneralSourceText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string GeneralSourceCode {
            get {
                return this.GeneralSourceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneralSourceCodeField, value) != true)) {
                    this.GeneralSourceCodeField = value;
                    this.RaisePropertyChanged("GeneralSourceCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.b2b.is/Accounts/2013/01/01/AccountService", ConfigurationName="Account20130101Proxy.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.b2b.is/Accounts/2013/01/01/AccountService/IAccountService/GetAccou" +
            "nts", ReplyAction="http://schemas.b2b.is/Accounts/2013/01/01/AccountService/IAccountService/GetAccou" +
            "ntsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IsIT.B2B.AccountServiceTest.Account20130101Proxy.BankErrorFault), Action="http://schemas.b2b.is/Accounts/2013/01/01/AccountService/IAccountService/GetAccou" +
            "ntsBankErrorFaultFault", Name="BankErrorFault", Namespace="http://schemas.b2b.is/Accounts/2013/01/01/Faults")]
        System.Collections.ObjectModel.Collection<IsIT.B2B.AccountServiceTest.Account20130101Proxy.Account> GetAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.b2b.is/Accounts/2013/01/01/AccountService/IAccountService/GetAccou" +
            "nt", ReplyAction="http://schemas.b2b.is/Accounts/2013/01/01/AccountService/IAccountService/GetAccou" +
            "ntResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IsIT.B2B.AccountServiceTest.Account20130101Proxy.BankErrorFault), Action="http://schemas.b2b.is/Accounts/2013/01/01/AccountService/IAccountService/GetAccou" +
            "ntBankErrorFaultFault", Name="BankErrorFault", Namespace="http://schemas.b2b.is/Accounts/2013/01/01/Faults")]
        IsIT.B2B.AccountServiceTest.Account20130101Proxy.Account GetAccount(string bank, string ledger, string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.b2b.is/Accounts/2013/01/01/AccountService/IAccountService/GetAccou" +
            "ntsByOwnerPersonId", ReplyAction="http://schemas.b2b.is/Accounts/2013/01/01/AccountService/IAccountService/GetAccou" +
            "ntsByOwnerPersonIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IsIT.B2B.AccountServiceTest.Account20130101Proxy.BankErrorFault), Action="http://schemas.b2b.is/Accounts/2013/01/01/AccountService/IAccountService/GetAccou" +
            "ntsByOwnerPersonIdBankErrorFaultFault", Name="BankErrorFault", Namespace="http://schemas.b2b.is/Accounts/2013/01/01/Faults")]
        System.Collections.ObjectModel.Collection<IsIT.B2B.AccountServiceTest.Account20130101Proxy.Account> GetAccountsByOwnerPersonId(string ownerPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.b2b.is/Accounts/2013/01/01/AccountService/IAccountService/VerifyAc" +
            "count", ReplyAction="http://schemas.b2b.is/Accounts/2013/01/01/AccountService/IAccountService/VerifyAc" +
            "countResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(IsIT.B2B.AccountServiceTest.Account20130101Proxy.BankErrorFault), Action="http://schemas.b2b.is/Accounts/2013/01/01/AccountService/IAccountService/VerifyAc" +
            "countBankErrorFaultFault", Name="BankErrorFault", Namespace="http://schemas.b2b.is/Accounts/2013/01/01/Faults")]
        bool VerifyAccount(string bank, string ledger, string accountNumber, string ownerPersonId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : IsIT.B2B.AccountServiceTest.Account20130101Proxy.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<IsIT.B2B.AccountServiceTest.Account20130101Proxy.IAccountService>, IsIT.B2B.AccountServiceTest.Account20130101Proxy.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.ObjectModel.Collection<IsIT.B2B.AccountServiceTest.Account20130101Proxy.Account> GetAccounts() {
            return base.Channel.GetAccounts();
        }
        
        public IsIT.B2B.AccountServiceTest.Account20130101Proxy.Account GetAccount(string bank, string ledger, string accountNumber) {
            return base.Channel.GetAccount(bank, ledger, accountNumber);
        }
        
        public System.Collections.ObjectModel.Collection<IsIT.B2B.AccountServiceTest.Account20130101Proxy.Account> GetAccountsByOwnerPersonId(string ownerPersonId) {
            return base.Channel.GetAccountsByOwnerPersonId(ownerPersonId);
        }
        
        public bool VerifyAccount(string bank, string ledger, string accountNumber, string ownerPersonId) {
            return base.Channel.VerifyAccount(bank, ledger, accountNumber, ownerPersonId);
        }
    }
}
